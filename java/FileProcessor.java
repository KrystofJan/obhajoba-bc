import java.io.*;
import java.util.regex.*;

public class FileProcessor {
    public static void filterLinesByRegex(String inputFilePath, String regexPattern, String outputFilePath) {
        Pattern pattern = Pattern.compile(regexPattern);
        try (BufferedReader reader = new BufferedReader(new FileReader(inputFilePath));
             BufferedWriter writer = new BufferedWriter(new FileWriter(outputFilePath))) {
            String line;
            int lineNumber = 0;
            while ((line = reader.readLine()) != null) {
                lineNumber++;
                try {
                    if (pattern.matcher(line).find()) { // +1
                        writer.write(line);
                        writer.newLine();
                    }
                } catch (Exception e) { // +1
                    System.err.printf("‚ö†Ô∏è Chyba p≈ôi zpracov√°n√≠ regul√°rn√≠ho v√Ωrazu na ≈ô√°dku %d: %s%n", lineNumber, e.getMessage());
                }
            }
        } catch (FileNotFoundException e) { // +1
            System.err.printf("‚ùå Soubor '%s' nebyl nalezen.%n", inputFilePath);
        } catch (IOException e) { // +1
            System.err.printf("‚ùå IO chyba: %s%n", e.getMessage());
        } catch (OutOfMemoryError e) { // +1
            System.err.println("‚ùå Nedostatek pamƒõti p≈ôi zpracov√°n√≠ souboru.");
        } catch (Exception e) { // +1
            System.err.printf("‚ùå Neoƒçek√°van√° chyba: %s%n", e.getMessage());
        }
    }
    public static void main(String[] args) {
        if (args.length != 3) {
            System.err.println("‚ùó Pou≈æit√≠: <vstupn√≠_soubor> <v√Ωstupn√≠_soubor> <regul√°rn√≠_v√Ωraz>");
            return;
        }

        String inputFile = args[0];
        String outputFile = args[1];
        String pattern = args[2];

        System.out.printf("üìÇ Zpracov√°v√°m soubor '%s' s v√Ωrazem '%s'%n", inputFile, pattern);
        filterLinesByRegex(inputFile, pattern, outputFile);
        System.out.println("‚úÖ Hotovo. V√Ωsledky jsou zaps√°ny do v√Ωstupn√≠ho souboru.");
    }
}
