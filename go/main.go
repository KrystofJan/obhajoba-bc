
package main

import (
    "bufio"
    "fmt"
    "os"
    "regexp"
)

func filterLinesByRegex(inputFilePath, regexPattern, outputFilePath string) {
    inputFile, err := os.Open(inputFilePath)
    if err != nil {
	fmt.Printf("‚ùå Chyba p≈ôi otev√≠r√°n√≠ vstupn√≠ho souboru '%s': %v\n", inputFilePath, err)
	return
    }
    defer func() {
	if err := inputFile.Close(); err != nil {
	    fmt.Printf("‚ö†Ô∏è Chyba p≈ôi zav√≠r√°n√≠ vstupn√≠ho souboru: %v\n", err)
	}
    }()

    outputFile, err := os.Create(outputFilePath)
    if err != nil {
	fmt.Printf("‚ùå Chyba p≈ôi vytv√°≈ôen√≠ v√Ωstupn√≠ho souboru '%s': %v\n", outputFilePath, err)
	return
    }
    defer func() {
	if err := outputFile.Close(); err != nil {
	    fmt.Printf("‚ö†Ô∏è Chyba p≈ôi zav√≠r√°n√≠ v√Ωstupn√≠ho souboru: %v\n", err)
	}
    }()

    scanner := bufio.NewScanner(inputFile)
    writer := bufio.NewWriter(outputFile)
    defer writer.Flush()

    pattern, err := regexp.Compile(regexPattern)
    if err != nil {
	fmt.Printf("‚ùå Chyba v regul√°rn√≠m v√Ωrazu: %v\n", err)
	return
    }

    lineNumber := 0
    for scanner.Scan() {
	line := scanner.Text()
	lineNumber++
	match := pattern.MatchString(line)
	if match {
	    _, err := writer.WriteString(line + "\n")
	    if err != nil {
		fmt.Printf("‚ùå Chyba p≈ôi z√°pisu na ≈ô√°dku %d: %v\n", lineNumber, err)
		return
	    }
	}
    }

    if err := scanner.Err(); err != nil {
	fmt.Printf("‚ùå Chyba p≈ôi ƒçten√≠ souboru: %v\n", err)
    }
}

func main() {
    if len(os.Args) != 4 {
	fmt.Println("‚ùó Pou≈æit√≠: <vstupn√≠_soubor> <v√Ωstupn√≠_soubor> <regul√°rn√≠_v√Ωraz>")
	return
    }

    inputFile := os.Args[1]
    outputFile := os.Args[2]
    regexPattern := os.Args[3]

    fmt.Printf("üìÇ Zpracov√°v√°m soubor '%s' s v√Ωrazem '%s'\n", inputFile, regexPattern)
    filterLinesByRegex(inputFile, regexPattern, outputFile)
    fmt.Println("‚úÖ Hotovo. V√Ωsledky jsou zaps√°ny do v√Ωstupn√≠ho souboru.")
}
