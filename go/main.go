package main

import (
    "bufio"
    "fmt"
    "log"
    "os"
    "regexp"
)

func filterLinesByRegex(inputFilePath, regexPattern, outputFilePath string) {
    inputFile, err := os.Open(inputFilePath)
    if err != nil { // +1
	log.Fatalf("‚ùå Chyba p≈ôi otev√≠r√°n√≠ vstupn√≠ho souboru '%s': %v", inputFilePath, err)
    }
    defer func() {
	if err := inputFile.Close(); err != nil { // +1
	    log.Printf("‚ö†Ô∏è Chyba p≈ôi zav√≠r√°n√≠ vstupn√≠ho souboru: %v", err)
	}
    }()
    outputFile, err := os.Create(outputFilePath)
    if err != nil { // +1
	log.Fatalf("‚ùå Chyba p≈ôi vytv√°≈ôen√≠ v√Ωstupn√≠ho souboru '%s': %v", outputFilePath, err)
    }
    defer func() {
	if err := outputFile.Close(); err != nil { // +1
	    log.Printf("‚ö†Ô∏è Chyba p≈ôi zav√≠r√°n√≠ v√Ωstupn√≠ho souboru: %v", err)
	}
    }()
    writer := bufio.NewWriter(outputFile)
    defer writer.Flush()

    pattern, err := regexp.Compile(regexPattern)
    if err != nil { // +1
	log.Fatalf("‚ùå Chyba v regul√°rn√≠m v√Ωrazu: %v", err)
    }
    scanner := bufio.NewScanner(inputFile)
    for lineNumber := 1; scanner.Scan(); lineNumber++ { // +1
	line := scanner.Text()
	if pattern.MatchString(line) { // +1
	    if _, err := writer.WriteString(line + "\n"); err != nil {
		log.Fatalf("‚ùå Chyba p≈ôi z√°pisu na ≈ô√°dku %d: %v", lineNumber, err)
	    }
	}
	}
	    if err := scanner.Err(); err != nil { // +1
	    log.Fatalf("‚ùå Chyba p≈ôi ƒçten√≠ souboru: %v", err)
	}
    }

    func main() {
	if len(os.Args) != 4 {
	    fmt.Println("‚ùó Pou≈æit√≠: <vstupn√≠_soubor> <v√Ωstupn√≠_soubor> <regul√°rn√≠_v√Ωraz>")
	    return
	}

	inputFile := os.Args[1]
	outputFile := os.Args[2]
	regexPattern := os.Args[3]

	fmt.Printf("üìÇ Zpracov√°v√°m soubor '%s' s v√Ωrazem '%s'\n", inputFile, regexPattern)
	filterLinesByRegex(inputFile, regexPattern, outputFile)
	fmt.Println("‚úÖ Hotovo. V√Ωsledky jsou zaps√°ny do v√Ωstupn√≠ho souboru.")
    }
